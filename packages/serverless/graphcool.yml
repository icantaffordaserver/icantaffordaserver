types: ./graphcool/types.graphql
functions:
  matchUsers-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/admin/schemaExtension/matchUsers
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/matchUsers.schemaExtension.graphql
  getConversationToken-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/schemaExtension/getConversationToken
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/getConversationToken.schemaExtension.graphql
  sendInvite-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/invite/subscription/sendInvite
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/sendInvite.subscription.graphql
  setPasswordResetComplete-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/subscription/setPasswordResetComplete
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/setPasswordResetComplete.subscription.graphql
  moveConnectionToScheduled-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/subscription/moveConnectionToScheduled
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/moveConnectionToScheduled.subscription.graphql
  createConnectionSuggestions-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/subscription/createConnectionSuggestions
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/createConnectionSuggestions.subscription.graphql
  authenticateUser-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/schemaExtension/authenticateUser
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/authenticateUser.schemaExtension.graphql
  sendPasswordResetEmail-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/subscription/sendPasswordResetEmail
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/sendPasswordResetEmail.subscription.graphql
  signUpUser-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/schemaExtension/signUpUser
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/signUpUser.schemaExtension.graphql
  sendVerificationEmail-subscription:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/subscription/sendVerificationEmail
        headers:
          Content-Type: application/json
    type: subscription
    query: ./graphcool/src/sendVerificationEmail.subscription.graphql
  triggerPasswordReset-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/schemaExtension/triggerPasswordReset
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/triggerPasswordReset.schemaExtension.graphql
  sendInvite-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/invite/schemaExtension/sendInvite
    type: resolver
    schema: ./graphcool/src/sendInvite.schemaExtension.graphql
  createAndSendInviteEmail-subscription:
    type: subscription
    query: ./graphcool/src/createAndSendInviteEmail.subscription.graphql
    handler:
      webhook: 
        url: ${env:WEBHOOK_SERVER_URL}/invite/subscription/createAndSendInviteEmail
        headers:
          Content-Type: application/json
  updatePassword-schemaExtension:
    handler:
      webhook:
        url: ${env:WEBHOOK_SERVER_URL}/user/schemaExtension/updatePassword
        headers:
          Content-Type: application/json
    type: resolver
    schema: ./graphcool/src/updatePassword.schemaExtension.graphql
permissions:
- operation: File.read
- operation: File.create
- operation: File.update
- operation: File.delete
- operation: User.read
- operation: User.create
- operation: User.update
- operation: User.delete
- operation: Connections.read
- operation: Connections.create
- operation: Connections.update
- operation: Connections.delete
- operation: ConnectionReviews.read
- operation: ConnectionReviews.create
- operation: ConnectionReviews.update
- operation: ConnectionReviews.delete
- operation: ConnectionSuggestion.read
- operation: ConnectionSuggestion.create
- operation: ConnectionSuggestion.update
- operation: ConnectionSuggestion.delete
- operation: ConversationPrompt.read
- operation: ConversationPrompt.create
- operation: ConversationPrompt.update
- operation: ConversationPrompt.delete
- operation: FireStarter.read
- operation: FireStarter.create
- operation: FireStarter.update
- operation: FireStarter.delete
- operation: FireStarterAnswer.read
- operation: FireStarterAnswer.create
- operation: FireStarterAnswer.update
- operation: FireStarterAnswer.delete
- operation: Invite.read
- operation: Invite.create
- operation: Invite.update
- operation: Invite.delete
- operation: PasswordReset.read
- operation: PasswordReset.create
- operation: PasswordReset.update
- operation: PasswordReset.delete
- operation: Role.read
- operation: Role.create
- operation: Role.update
- operation: Role.delete
- operation: VerifyEmail.read
- operation: VerifyEmail.create
- operation: VerifyEmail.update
- operation: VerifyEmail.delete
- operation: ConnectionInterests.read
- operation: ConnectionInterests.create
- operation: ConnectionInterests.update
- operation: ConnectionInterests.delete
- operation: ConnectionReport.read
- operation: ConnectionReport.create
- operation: ConnectionReport.update
- operation: ConnectionReport.delete
- operation: ConnectionJournal.read
- operation: ConnectionJournal.create
- operation: ConnectionJournal.update
- operation: ConnectionJournal.delete
- operation: FireStarterAnswers.*
- operation: UserFireStarterAnswer.*
- operation: ConnectionsOnConnectionReviews.*
- operation: PasswordResetOnUser.*
- operation: RoleOnUser.*
- operation: ConnectionReviewsOnUser.*
- operation: ConnectionsOnUser1.*
- operation: ConnectionsOnUser.*
- operation: ConnectionsOnConnectionJournal.*
- operation: ConnectionJournalOnUser.*
- operation: InterestedUsers.*
- operation: UserOnVerifyEmail.*
- operation: UserComment.*
- operation: ConnectionsOnConnectionReport.*
- operation: ConnectionReportOnReporterUser.*
- operation: ConnectionReportOnReportedUser.*
- operation: ConnectionSuggestionsForUser.*
- operation: ConnectionSuggestionOnConnection.*
rootTokens:
- adminToken