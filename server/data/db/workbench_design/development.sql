-- MySQL Script generated by MySQL Workbench
-- Sat Oct 22 14:47:00 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema development
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema development
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `development` DEFAULT CHARACTER SET utf8 ;
USE `development` ;

-- -----------------------------------------------------
-- Table `development`.`knex_migrations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`knex_migrations` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `batch` INT(11) NULL DEFAULT NULL,
  `migration_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `development`.`knex_migrations_lock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`knex_migrations_lock` (
  `is_locked` INT(11) NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `development`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `username` VARCHAR(255) NULL DEFAULT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `email_verified` TINYINT(1) NULL DEFAULT NULL,
  `email_verified_token` VARCHAR(255) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `users_email_unique` (`email` ASC),
  UNIQUE INDEX `users_username_unique` (`username` ASC),
  UNIQUE INDEX `users_email_verified_token_unique` (`email_verified_token` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `development`.`profile_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`profile_data` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT UNSIGNED NOT NULL,
  `last_name` VARCHAR(45) NULL,
  `first_name` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`, `users_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_profile_data_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_profile_data_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `development`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`profile_questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`profile_questions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `question_text` VARCHAR(45) NULL,
  `question_type` ENUM('profile') NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`profile_answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`profile_answers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT(10) UNSIGNED NOT NULL,
  `profile_questions_id` INT UNSIGNED NOT NULL,
  `answer_text` VARCHAR(45) NULL,
  `answer_type` ENUM('profile') NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_answers_users1_idx` (`users_id` ASC),
  INDEX `fk_answers_questions1_idx` (`profile_questions_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_answers_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `development`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_answers_questions1`
    FOREIGN KEY (`profile_questions_id`)
    REFERENCES `development`.`profile_questions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`connections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`connections` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT UNSIGNED NOT NULL,
  `appointment_time` DATETIME NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_connections_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_connections_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `development`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`connection_questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`connection_questions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `question_text` VARCHAR(45) NULL,
  `question_type` ENUM('pre_connection', 'post_connection', 'connection_review') NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`connection_answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`connection_answers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT UNSIGNED NOT NULL,
  `connection_questions_id` INT UNSIGNED NOT NULL,
  `connections_id` INT UNSIGNED NOT NULL,
  `answer_text` VARCHAR(45) NULL,
  `answer_type` ENUM('pre_connection', 'post_connection', 'connection_review') NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_connection_answers_users1_idx` (`users_id` ASC),
  INDEX `fk_connection_answers_connection_questions1_idx` (`connection_questions_id` ASC),
  INDEX `fk_connection_answers_connections1_idx` (`connections_id` ASC),
  CONSTRAINT `fk_connection_answers_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `development`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_answers_connection_questions1`
    FOREIGN KEY (`connection_questions_id`)
    REFERENCES `development`.`connection_questions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_connection_answers_connections1`
    FOREIGN KEY (`connections_id`)
    REFERENCES `development`.`connections` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`profile_data_has_profile_questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`profile_data_has_profile_questions` (
  `profile_data_id` INT UNSIGNED NOT NULL,
  `profile_questions_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`profile_data_id`, `profile_questions_id`),
  INDEX `fk_profile_data_has_profile_questions_profile_questions1_idx` (`profile_questions_id` ASC),
  INDEX `fk_profile_data_has_profile_questions_profile_data1_idx` (`profile_data_id` ASC),
  CONSTRAINT `fk_profile_data_has_profile_questions_profile_data1`
    FOREIGN KEY (`profile_data_id`)
    REFERENCES `development`.`profile_data` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profile_data_has_profile_questions_profile_questions1`
    FOREIGN KEY (`profile_questions_id`)
    REFERENCES `development`.`profile_questions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `development`.`profile_data_has_connections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `development`.`profile_data_has_connections` (
  `profile_data_id` INT UNSIGNED NOT NULL,
  `connections_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`profile_data_id`, `connections_id`),
  INDEX `fk_profile_data_has_connections_connections1_idx` (`connections_id` ASC),
  INDEX `fk_profile_data_has_connections_profile_data1_idx` (`profile_data_id` ASC),
  CONSTRAINT `fk_profile_data_has_connections_profile_data1`
    FOREIGN KEY (`profile_data_id`)
    REFERENCES `development`.`profile_data` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profile_data_has_connections_connections1`
    FOREIGN KEY (`connections_id`)
    REFERENCES `development`.`connections` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
